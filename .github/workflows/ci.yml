name: Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '**.md'
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  DOCKER_BUILDKIT: 1

jobs:

  binary:
    name: Build Binary
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Determine Go version from go.mod
        run: echo "GO_VERSION=$(grep "go 1." go.mod | cut -d " " -f 2)" >> $GITHUB_ENV
      - name: Setup Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build Binary
        run: make build
      - name: Store Artifacts in Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/nginx-asg-sync
          key: nginx-asg-sync-${{ github.run_id }}-${{ github.run_number }}

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Determine Go version from go.mod
        run: echo "GO_VERSION=$(grep "go 1." go.mod | cut -d " " -f 2)" >> $GITHUB_ENV
      - name: Setup Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tests
        run: make test

  build:
    name: Build Image
    runs-on: ubuntu-20.04
    needs: [binary, unit-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Fetch Cached Artifacts
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/nginx-asg-sync
          key: nginx-asg-sync-${{ github.run_id }}-${{ github.run_number }}
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Image Amazon 2
        uses: docker/build-push-action@v3
        with:
          file: build/Dockerfile
          context: '.'
          target: local
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: amazon2-builder:${{ github.sha }}
          build-args: |
            CONTAINER_VERSION=amazonlinux:2
            OS_TYPE=rpm_based
      - name: Run Amazon 2
        uses: addnab/docker-run-action@v3
        with:
          image: amazon2-builder:${{ github.sha }}
          run: /build.sh
          options: -v ${{ github.workspace }}/build/package/rpm:/rpm -v ${{ github.workspace }}/build_output:/build_output
      - name: Build Image Centos 7
        uses: docker/build-push-action@v3
        with:
          file: build/Dockerfile
          context: '.'
          target: local
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: centos7-builder:${{ github.sha }}
          build-args: |
            CONTAINER_VERSION=centos:7
            OS_TYPE=rpm_based
      - name: Run Centos 7
        uses: addnab/docker-run-action@v3
        with:
          image: centos7-builder:${{ github.sha }}
          run: /build.sh
          options: -v ${{ github.workspace }}/build/package/rpm:/rpm -v ${{ github.workspace }}/build_output:/build_output
      - name: Build Image Centos stream 8
        uses: docker/build-push-action@v3
        with:
          file: build/Dockerfile
          context: '.'
          target: local
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: centosstream8-builder:${{ github.sha }}
          build-args: |
            CONTAINER_VERSION=quay.io/centos/centos:stream8
            OS_TYPE=rpm_based
      - name: Run Centos stream 8
        uses: addnab/docker-run-action@v3
        with:
          image: centosstream8-builder:${{ github.sha }}
          run: /build.sh
          options: -v ${{ github.workspace }}/build/package/rpm:/rpm -v ${{ github.workspace }}/build_output:/build_output
      - name: Build Image Debian
        uses: docker/build-push-action@v3
        with:
          file: build/Dockerfile
          context: '.'
          target: local
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: debian-builder:${{ github.sha }}
          build-args: |
            OS_TYPE=deb_based
      - name: Run Debian
        uses: addnab/docker-run-action@v3
        with:
          image: debian-builder:${{ github.sha }}
          run: /build.sh
          options: -v ${{ github.workspace }}/build/package/debian:/debian -v ${{ github.workspace }}/build_output:/build_output
